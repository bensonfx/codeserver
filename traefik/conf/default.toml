[http.middlewares]
  [http.middlewares.basic-auth.basicAuth]
    users = ["benson:$apr1$5HP.kZpz$cvmDw3ADcLwSAzNDLF8RZ."]
    removeHeader = true
  [http.middlewares.https-redirect.redirectScheme]
    scheme = "https"
    permanent = true
    port = 5443
  [http.middlewares.content-compress.compress]

# tricks 实现，提供 HTTP 默认转发 HTTPS
# https://github.com/containous/traefik/issues/4863#issuecomment-491093096
# [http.services]
#   [http.services.noop.LoadBalancer]
#      [[http.services.noop.LoadBalancer.servers]]
#         url = "" # or url = "localhost"
# [http.routers]
#   [http.routers.https-redirect]
#     entryPoints = ["http"]
#     rule = "HostRegexp(`{any:.*}`)"
#     middlewares = ["https-redirect"]
#     service = "noop"


# [[tls.certificates]]
#   certFile = "/data/ssl/bensonfx.net.crt"
#   keyFile = "/data/ssl/bensonfx.net.key"
#   stores = ["default"]

[tls.options]
  [tls.options.default]
    minVersion = "VersionTLS12"
    sniStrict = true
    preferServerCipherSuites = true
    cipherSuites = [
      "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
      "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
      "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
      "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
      "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305",
      "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
      "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
      "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
      "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
      "TLS_RSA_WITH_AES_128_GCM_SHA256",
      "TLS_RSA_WITH_AES_256_GCM_SHA384",
      "TLS_RSA_WITH_AES_128_CBC_SHA",
      "TLS_RSA_WITH_AES_256_CBC_SHA",
    ]
  [tls.options.mintls13]
    minVersion = "VersionTLS13"

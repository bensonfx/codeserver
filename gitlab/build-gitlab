#!/bin/sh

CWD=$(pwd)
DOCKER_PATH=image/Dockerfile
GITLAB_ZH_URL=https://gitlab.com/xhang/gitlab
WORK_DIR=${CWD}/image
GITLAB_REPO=${WORK_DIR}/gitlab

GITLAB_VERSION=$(grep -o "GITLAB_VERSION=.*" ${DOCKER_PATH} | awk -F = NR==1'{print $2}')
GITLAB_ZH_VERSION=${GITLAB_VERSION}-zh

PATCH_FILE=${WORK_DIR}/patch_${GITLAB_VERSION}_zh_CN.diff
ASSETS_FILES="locale app_assets vendor_assets"

GITLAB_BRANCH_ZH=$(echo $GITLAB_VERSION | sed -r 's@([0-9]+).([0-9]+).*@\1-\2-stable-zh@')

gitlab_image_exist() {
    local prefix=$1
    echo $(docker images | grep ${prefix}/gitlab-ce | grep -oE ${GITLAB_VERSION})
}

#fetch latest zh gitlab source
if [ ! -d ${GITLAB_REPO} ];then
    git clone ${GITLAB_ZH_URL} ${GITLAB_REPO}
fi

if [ ! -f "${PATCH_FILE}" ];then
    cd ${GITLAB_REPO}
    # git pull
    GITLAB_NO_UPDATE_FLAG=0
    [ -z "$(git fetch)" ] && GITLAB_NO_UPDATE_FLAG=1
    if [ -z "$(git branch -a | grep ${GITLAB_BRANCH_ZH})" ];then
        echo "can not find branch ${GITLAB_BRANCH_ZH}"
        exit 1
    fi
    git checkout ${GITLAB_BRANCH_ZH}
    [ $GITLAB_NO_UPDATE_FLAG -ne 0 ] && git merge

    IGNORE_DIRS=':!qa :!spec :!features :!.gitignore :!.gitlab :!locale :!app/assets/ :!vendor/assets/'
    git diff v${GITLAB_VERSION}..v${GITLAB_ZH_VERSION} -- .  ${IGNORE_DIRS} > ${PATCH_FILE}
    # prepare assets files
    git checkout v${GITLAB_ZH_VERSION}
    for asset in ${ASSETS_FILES};do
        tar acf ${WORK_DIR}/${asset}.tgz ${asset//'_'/'/'}
    done
    git checkout ${GITLAB_BRANCH_ZH}
    cd -
fi

#build
docker-compose build gitlab

#remove useless image
[ -f "${PATCH_FILE}" ] && rm ${PATCH_FILE}
for asset in ${ASSETS_FILES};do
    [ -f "${WORK_DIR}/${asset}.tgz" ] && rm -v ${WORK_DIR}/${asset}.tgz
done

if [ -n "$(gitlab_image_exist bensonfx)" -a -n "$(gitlab_image_exist gitlab)" ];then
    docker rmi gitlab/gitlab-ce:${GITLAB_VERSION}-ce.0
fi
